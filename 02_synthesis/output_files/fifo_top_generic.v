
// Generated by Cadence Genus(TM) Synthesis Solution 21.18-s082_1
// Generated on: Mar  4 2025 16:10:05 IST (Mar  4 2025 10:40:05 UTC)

// Verification Directory fv/fifo_top 

module fifo_empty(rd_clk, rd_en, rd_rst, wr_ptr_addr_sync, empty,
     rd_addr_grey, rd_addr_bin);
  input rd_clk, rd_en, rd_rst;
  input [4:0] wr_ptr_addr_sync;
  output empty;
  output [4:0] rd_addr_grey;
  output [3:0] rd_addr_bin;
  wire rd_clk, rd_en, rd_rst;
  wire [4:0] wr_ptr_addr_sync;
  wire empty;
  wire [4:0] rd_addr_grey;
  wire [3:0] rd_addr_bin;
  wire [4:0] rd_addr_grey_next;
  wire [4:0] rd_addr_bin_next;
  wire empty_n, n_26, n_56, n_57, n_59, n_69, n_71, n_72;
  wire n_74, n_77, n_79, n_100, n_101, n_102, n_103, n_104;
  wire n_105, n_120, n_121, n_122, n_123, n_124, n_125, n_126;
  wire n_127, n_128, n_129, n_130, n_131, n_132, n_133, n_134;
  wire n_135, n_136, n_137, n_138, n_139, n_140, n_141, n_142;
  wire n_143, n_144, n_145;
  CDN_flop empty_r_reg(.clk (rd_clk), .d (empty_n), .sena (1'b1), .aclr
       (1'b0), .apre (n_69), .srl (1'b0), .srd (1'b0), .q (empty));
  not g36 (n_69, rd_rst);
  or g44 (n_74, n_71, wc);
  not gc (wc, rd_addr_bin[3]);
  or g63 (n_59, n_100, n_101);
  or g87 (n_100, n_104, n_105);
  nand g88 (n_104, n_56, n_57);
  nand g89 (n_120, rd_addr_grey_next[3], wr_ptr_addr_sync[3]);
  or g90 (n_121, rd_addr_grey_next[3], wr_ptr_addr_sync[3]);
  nand g91 (n_57, n_120, n_121);
  nand g92 (n_122, rd_addr_bin_next[4], wr_ptr_addr_sync[4]);
  or g93 (n_123, rd_addr_bin_next[4], wr_ptr_addr_sync[4]);
  nand g94 (n_79, n_122, n_123);
  nand g95 (n_105, n_102, n_103);
  nand g96 (n_124, rd_addr_grey_next[2], wr_ptr_addr_sync[2]);
  or g97 (n_125, rd_addr_grey_next[2], wr_ptr_addr_sync[2]);
  nand g98 (n_56, n_124, n_125);
  or g99 (n_126, wc0, rd_addr_bin_next[3]);
  not gc0 (wc0, rd_addr_bin_next[4]);
  or g100 (n_127, rd_addr_bin_next[4], wc1);
  not gc1 (wc1, rd_addr_bin_next[3]);
  nand g101 (rd_addr_grey_next[3], n_126, n_127);
  or g102 (n_102, rd_addr_grey_next[1], wc2);
  not gc2 (wc2, wr_ptr_addr_sync[1]);
  nand g103 (n_128, n_74, rd_addr_grey[4]);
  or g104 (n_129, n_74, rd_addr_grey[4]);
  nand g105 (rd_addr_bin_next[4], n_128, n_129);
  or g106 (n_130, wc3, rd_addr_bin_next[2]);
  not gc3 (wc3, rd_addr_bin_next[3]);
  or g107 (n_131, rd_addr_bin_next[3], wc4);
  not gc4 (wc4, rd_addr_bin_next[2]);
  nand g108 (rd_addr_grey_next[2], n_130, n_131);
  or g109 (n_103, wc5, wr_ptr_addr_sync[1]);
  not gc5 (wc5, rd_addr_grey_next[1]);
  or g110 (n_132, wc6, wr_ptr_addr_sync[0]);
  not gc6 (wc6, rd_addr_grey_next[0]);
  or g111 (n_133, rd_addr_grey_next[0], wc7);
  not gc7 (wc7, wr_ptr_addr_sync[0]);
  nand g112 (n_101, n_132, n_133);
  nand g113 (n_134, n_71, rd_addr_bin[3]);
  or g114 (n_135, n_71, rd_addr_bin[3]);
  nand g115 (rd_addr_bin_next[3], n_134, n_135);
  or g116 (n_136, wc8, rd_addr_bin_next[1]);
  not gc8 (wc8, rd_addr_bin_next[2]);
  or g117 (n_137, rd_addr_bin_next[2], wc9);
  not gc9 (wc9, rd_addr_bin_next[1]);
  nand g118 (rd_addr_grey_next[1], n_136, n_137);
  or g119 (n_71, wc10, n_72);
  not gc10 (wc10, rd_addr_bin[2]);
  or g120 (n_138, wc11, rd_addr_bin_next[0]);
  not gc11 (wc11, rd_addr_bin_next[1]);
  or g121 (n_139, rd_addr_bin_next[1], wc12);
  not gc12 (wc12, rd_addr_bin_next[0]);
  nand g122 (rd_addr_grey_next[0], n_138, n_139);
  nand g123 (n_140, rd_addr_bin[2], n_72);
  or g124 (n_141, rd_addr_bin[2], n_72);
  nand g125 (rd_addr_bin_next[2], n_140, n_141);
  or g126 (n_72, n_77, wc13);
  not gc13 (wc13, rd_addr_bin[1]);
  nand g127 (n_142, n_77, rd_addr_bin[1]);
  or g128 (n_143, n_77, rd_addr_bin[1]);
  nand g129 (rd_addr_bin_next[1], n_142, n_143);
  nand g130 (n_144, rd_addr_bin[0], n_26);
  or g131 (n_145, rd_addr_bin[0], n_26);
  nand g132 (rd_addr_bin_next[0], n_144, n_145);
  or g133 (n_77, wc14, n_26);
  not gc14 (wc14, rd_addr_bin[0]);
  or g134 (n_26, wc15, empty);
  not gc15 (wc15, rd_en);
  and g135 (empty_n, n_79, wc16);
  not gc16 (wc16, n_59);
  CDN_flop \rd_addr_bin_r_reg[0] (.clk (rd_clk), .d
       (rd_addr_bin_next[0]), .sena (1'b1), .aclr (n_69), .apre (1'b0),
       .srl (1'b0), .srd (1'b0), .q (rd_addr_bin[0]));
  CDN_flop \rd_addr_bin_r_reg[1] (.clk (rd_clk), .d
       (rd_addr_bin_next[1]), .sena (1'b1), .aclr (n_69), .apre (1'b0),
       .srl (1'b0), .srd (1'b0), .q (rd_addr_bin[1]));
  CDN_flop \rd_addr_bin_r_reg[2] (.clk (rd_clk), .d
       (rd_addr_bin_next[2]), .sena (1'b1), .aclr (n_69), .apre (1'b0),
       .srl (1'b0), .srd (1'b0), .q (rd_addr_bin[2]));
  CDN_flop \rd_addr_bin_r_reg[3] (.clk (rd_clk), .d
       (rd_addr_bin_next[3]), .sena (1'b1), .aclr (n_69), .apre (1'b0),
       .srl (1'b0), .srd (1'b0), .q (rd_addr_bin[3]));
  CDN_flop \rd_addr_bin_r_reg[4] (.clk (rd_clk), .d
       (rd_addr_bin_next[4]), .sena (1'b1), .aclr (n_69), .apre (1'b0),
       .srl (1'b0), .srd (1'b0), .q (rd_addr_grey[4]));
  CDN_flop \rd_addr_grey_reg[0] (.clk (rd_clk), .d
       (rd_addr_grey_next[0]), .sena (1'b1), .aclr (n_69), .apre
       (1'b0), .srl (1'b0), .srd (1'b0), .q (rd_addr_grey[0]));
  CDN_flop \rd_addr_grey_reg[1] (.clk (rd_clk), .d
       (rd_addr_grey_next[1]), .sena (1'b1), .aclr (n_69), .apre
       (1'b0), .srl (1'b0), .srd (1'b0), .q (rd_addr_grey[1]));
  CDN_flop \rd_addr_grey_reg[2] (.clk (rd_clk), .d
       (rd_addr_grey_next[2]), .sena (1'b1), .aclr (n_69), .apre
       (1'b0), .srl (1'b0), .srd (1'b0), .q (rd_addr_grey[2]));
  CDN_flop \rd_addr_grey_reg[3] (.clk (rd_clk), .d
       (rd_addr_grey_next[3]), .sena (1'b1), .aclr (n_69), .apre
       (1'b0), .srl (1'b0), .srd (1'b0), .q (rd_addr_grey[3]));
endmodule

module fifo_full(wr_clk, wr_en, wr_rst, rd_ptr_addr_sync, full,
     wr_addr_grey, wr_addr_bin);
  input wr_clk, wr_en, wr_rst;
  input [4:0] rd_ptr_addr_sync;
  output full;
  output [4:0] wr_addr_grey;
  output [3:0] wr_addr_bin;
  wire wr_clk, wr_en, wr_rst;
  wire [4:0] rd_ptr_addr_sync;
  wire full;
  wire [4:0] wr_addr_grey;
  wire [3:0] wr_addr_bin;
  wire [4:0] wr_addr_grey_next;
  wire [4:0] wr_addr_binary_next;
  wire full_n, n_26, n_29, n_30, n_78, n_79, n_87, n_88;
  wire n_91, n_92, n_93, n_94, n_95, n_98, n_103, n_104;
  wire n_109, n_110, n_111, n_112, n_113, n_114, n_115, n_116;
  wire n_117, n_118, n_119, n_120, n_121, n_122, n_123, n_124;
  wire n_125, n_126, n_127, n_128, n_129, n_130, n_131, n_132;
  wire n_133, n_134, n_135, n_136;
  CDN_flop full_r_reg(.clk (wr_clk), .d (full_n), .sena (1'b1), .aclr
       (n_79), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (full));
  not g1 (n_79, wr_rst);
  or g109 (n_104, wc17, n_78);
  not gc17 (wc17, n_88);
  nand g110 (n_78, n_92, n_91);
  or g111 (n_109, wc18, rd_ptr_addr_sync[3]);
  not gc18 (wc18, wr_addr_grey_next[3]);
  or g112 (n_110, wr_addr_grey_next[3], wc19);
  not gc19 (wc19, rd_ptr_addr_sync[3]);
  nand g113 (n_92, n_109, n_110);
  nand g114 (n_103, n_94, n_93);
  nand g115 (n_111, wr_addr_grey_next[2], rd_ptr_addr_sync[2]);
  or g116 (n_112, wr_addr_grey_next[2], rd_ptr_addr_sync[2]);
  nand g117 (n_94, n_111, n_112);
  or g118 (n_113, wc20, rd_ptr_addr_sync[4]);
  not gc20 (wc20, wr_addr_binary_next[4]);
  or g119 (n_114, wr_addr_binary_next[4], wc21);
  not gc21 (wc21, rd_ptr_addr_sync[4]);
  nand g120 (n_91, n_113, n_114);
  or g121 (n_115, wc22, wr_addr_binary_next[3]);
  not gc22 (wc22, wr_addr_binary_next[4]);
  or g122 (n_116, wr_addr_binary_next[4], wc23);
  not gc23 (wc23, wr_addr_binary_next[3]);
  nand g123 (wr_addr_grey_next[3], n_115, n_116);
  nand g124 (n_117, wr_addr_grey_next[1], rd_ptr_addr_sync[1]);
  or g125 (n_118, wr_addr_grey_next[1], rd_ptr_addr_sync[1]);
  nand g126 (n_88, n_117, n_118);
  or g127 (n_119, wc24, wr_addr_binary_next[2]);
  not gc24 (wc24, wr_addr_binary_next[3]);
  or g128 (n_120, wr_addr_binary_next[3], wc25);
  not gc25 (wc25, wr_addr_binary_next[2]);
  nand g129 (wr_addr_grey_next[2], n_119, n_120);
  nand g130 (n_121, n_29, wr_addr_grey[4]);
  or g131 (n_122, n_29, wr_addr_grey[4]);
  nand g132 (wr_addr_binary_next[4], n_121, n_122);
  or g133 (n_123, wc26, wr_addr_binary_next[1]);
  not gc26 (wc26, wr_addr_binary_next[2]);
  or g134 (n_124, wr_addr_binary_next[2], wc27);
  not gc27 (wc27, wr_addr_binary_next[1]);
  nand g135 (wr_addr_grey_next[1], n_123, n_124);
  nand g136 (n_125, wr_addr_grey_next[0], rd_ptr_addr_sync[0]);
  or g137 (n_126, wr_addr_grey_next[0], rd_ptr_addr_sync[0]);
  nand g138 (n_93, n_125, n_126);
  or g139 (n_29, n_98, wc28);
  not gc28 (wc28, wr_addr_bin[2]);
  nand g140 (n_127, n_95, wr_addr_bin[3]);
  or g141 (n_128, n_95, wr_addr_bin[3]);
  nand g142 (wr_addr_binary_next[3], n_127, n_128);
  nand g143 (n_129, wr_addr_bin[2], n_26);
  or g144 (n_130, wr_addr_bin[2], n_26);
  nand g145 (wr_addr_binary_next[2], n_129, n_130);
  or g146 (n_98, wc29, n_26);
  not gc29 (wc29, wr_addr_bin[3]);
  or g147 (n_131, wc30, wr_addr_binary_next[0]);
  not gc30 (wc30, wr_addr_binary_next[1]);
  or g148 (n_132, wr_addr_binary_next[1], wc31);
  not gc31 (wc31, wr_addr_binary_next[0]);
  nand g149 (wr_addr_grey_next[0], n_131, n_132);
  or g150 (n_95, n_26, wc32);
  not gc32 (wc32, wr_addr_bin[2]);
  or g151 (n_26, n_87, wc33);
  not gc33 (wc33, wr_addr_bin[1]);
  nand g152 (n_133, n_87, wr_addr_bin[1]);
  or g153 (n_134, n_87, wr_addr_bin[1]);
  nand g154 (wr_addr_binary_next[1], n_133, n_134);
  or g155 (n_87, wc34, n_30);
  not gc34 (wc34, wr_addr_bin[0]);
  nand g156 (n_135, wr_addr_bin[0], n_30);
  or g157 (n_136, wr_addr_bin[0], n_30);
  nand g158 (wr_addr_binary_next[0], n_135, n_136);
  or g159 (n_30, wc35, full);
  not gc35 (wc35, wr_en);
  nor g160 (full_n, n_103, n_104);
  CDN_flop \wr_addr_bin_r_reg[0] (.clk (wr_clk), .d
       (wr_addr_binary_next[0]), .sena (1'b1), .aclr (n_79), .apre
       (1'b0), .srl (1'b0), .srd (1'b0), .q (wr_addr_bin[0]));
  CDN_flop \wr_addr_bin_r_reg[1] (.clk (wr_clk), .d
       (wr_addr_binary_next[1]), .sena (1'b1), .aclr (n_79), .apre
       (1'b0), .srl (1'b0), .srd (1'b0), .q (wr_addr_bin[1]));
  CDN_flop \wr_addr_bin_r_reg[2] (.clk (wr_clk), .d
       (wr_addr_binary_next[2]), .sena (1'b1), .aclr (n_79), .apre
       (1'b0), .srl (1'b0), .srd (1'b0), .q (wr_addr_bin[2]));
  CDN_flop \wr_addr_bin_r_reg[3] (.clk (wr_clk), .d
       (wr_addr_binary_next[3]), .sena (1'b1), .aclr (n_79), .apre
       (1'b0), .srl (1'b0), .srd (1'b0), .q (wr_addr_bin[3]));
  CDN_flop \wr_addr_bin_r_reg[4] (.clk (wr_clk), .d
       (wr_addr_binary_next[4]), .sena (1'b1), .aclr (n_79), .apre
       (1'b0), .srl (1'b0), .srd (1'b0), .q (wr_addr_grey[4]));
  CDN_flop \wr_addr_grey_reg[0] (.clk (wr_clk), .d
       (wr_addr_grey_next[0]), .sena (1'b1), .aclr (n_79), .apre
       (1'b0), .srl (1'b0), .srd (1'b0), .q (wr_addr_grey[0]));
  CDN_flop \wr_addr_grey_reg[1] (.clk (wr_clk), .d
       (wr_addr_grey_next[1]), .sena (1'b1), .aclr (n_79), .apre
       (1'b0), .srl (1'b0), .srd (1'b0), .q (wr_addr_grey[1]));
  CDN_flop \wr_addr_grey_reg[2] (.clk (wr_clk), .d
       (wr_addr_grey_next[2]), .sena (1'b1), .aclr (n_79), .apre
       (1'b0), .srl (1'b0), .srd (1'b0), .q (wr_addr_grey[2]));
  CDN_flop \wr_addr_grey_reg[3] (.clk (wr_clk), .d
       (wr_addr_grey_next[3]), .sena (1'b1), .aclr (n_79), .apre
       (1'b0), .srl (1'b0), .srd (1'b0), .q (wr_addr_grey[3]));
endmodule

module fifo_memory(clk, rst, wr_en, full, wr_addr, rd_addr, wr_data,
     rd_data);
  input clk, rst, wr_en, full;
  input [3:0] wr_addr, rd_addr;
  input [7:0] wr_data;
  output [7:0] rd_data;
  wire clk, rst, wr_en, full;
  wire [3:0] wr_addr, rd_addr;
  wire [7:0] wr_data;
  wire [7:0] rd_data;
  wire [7:0] \mem[0] ;
  wire [7:0] \mem[1] ;
  wire [7:0] \mem[2] ;
  wire [7:0] \mem[15] ;
  wire [7:0] \mem[14] ;
  wire [7:0] \mem[13] ;
  wire [7:0] \mem[12] ;
  wire [7:0] \mem[11] ;
  wire [7:0] \mem[10] ;
  wire [7:0] \mem[9] ;
  wire [7:0] \mem[8] ;
  wire [7:0] \mem[7] ;
  wire [7:0] \mem[6] ;
  wire [7:0] \mem[5] ;
  wire [7:0] \mem[4] ;
  wire [7:0] \mem[3] ;
  wire n_146, n_148, n_150, n_152, n_154, n_156, n_158, n_160;
  wire n_162, n_164, n_166, n_168, n_170, n_172, n_174, n_353;
  wire n_354, n_572, n_573, n_574, n_575, n_576, n_577, n_578;
  wire n_579, n_580, n_581, n_582, n_583, n_584, n_585, n_586;
  wire n_587, n_588, n_589, n_590, n_591, n_592, n_593, n_594;
  wire n_595, n_604, n_605, n_607, n_609, n_611, n_633, n_634;
  wire n_639, n_640, n_645, n_646, n_651, n_652, n_657, n_658;
  wire n_663, n_664, n_669, n_670, n_675, n_676, n_737, n_738;
  wire n_739, n_740, n_741, n_742, n_743, n_744, n_745, n_746;
  wire n_747, n_748, n_749, n_750, n_751, n_752, n_753, n_754;
  wire n_755, n_756, n_757, n_758, n_759, n_760, n_761, n_762;
  wire n_763, n_764, n_765, n_766, n_827, n_828, n_829, n_830;
  wire n_831, n_832, n_833, n_834, n_835, n_836, n_837, n_838;
  wire n_839, n_840, n_841, n_842, n_843, n_844, n_845, n_846;
  wire n_847, n_848, n_849, n_850, n_851, n_852, n_853, n_854;
  wire n_855, n_856, n_917, n_918, n_919, n_920, n_921, n_922;
  wire n_923, n_924, n_925, n_926, n_927, n_928, n_929, n_930;
  wire n_931, n_932, n_933, n_934, n_935, n_936, n_937, n_938;
  wire n_939, n_940, n_941, n_942, n_943, n_944, n_945, n_946;
  wire n_1007, n_1008, n_1009, n_1010, n_1011, n_1012, n_1013, n_1014;
  wire n_1015, n_1016, n_1017, n_1018, n_1019, n_1020, n_1021, n_1022;
  wire n_1023, n_1024, n_1025, n_1026, n_1027, n_1028, n_1029, n_1030;
  wire n_1031, n_1032, n_1033, n_1034, n_1035, n_1036, n_1097, n_1098;
  wire n_1099, n_1100, n_1101, n_1102, n_1103, n_1104, n_1105, n_1106;
  wire n_1107, n_1108, n_1109, n_1110, n_1111, n_1112, n_1113, n_1114;
  wire n_1115, n_1116, n_1117, n_1118, n_1119, n_1120, n_1121, n_1122;
  wire n_1123, n_1124, n_1125, n_1126, n_1187, n_1188, n_1189, n_1190;
  wire n_1191, n_1192, n_1193, n_1194, n_1195, n_1196, n_1197, n_1198;
  wire n_1199, n_1200, n_1201, n_1202, n_1203, n_1204, n_1205, n_1206;
  wire n_1207, n_1208, n_1209, n_1210, n_1211, n_1212, n_1213, n_1214;
  wire n_1215, n_1216, n_1277, n_1278, n_1279, n_1280, n_1281, n_1282;
  wire n_1283, n_1284, n_1285, n_1286, n_1287, n_1288, n_1289, n_1290;
  wire n_1291, n_1292, n_1293, n_1294, n_1295, n_1296, n_1297, n_1298;
  wire n_1299, n_1300, n_1301, n_1302, n_1303, n_1304, n_1305, n_1306;
  wire n_1367, n_1368, n_1369, n_1370, n_1371, n_1372, n_1373, n_1374;
  wire n_1375, n_1376, n_1377, n_1378, n_1379, n_1380, n_1381, n_1382;
  wire n_1383, n_1384, n_1385, n_1386, n_1387, n_1388, n_1389, n_1390;
  wire n_1391, n_1392, n_1393, n_1394, n_1395, n_1396;
  nand g17 (n_583, rd_addr[1], rd_addr[2]);
  nand g22 (n_587, rd_addr[0], rd_addr[3]);
  not g496 (n_354, rst);
  or g497 (n_572, rd_addr[3], rd_addr[0]);
  or g498 (n_573, rd_addr[2], rd_addr[1]);
  or g499 (n_575, wc36, rd_addr[3]);
  not gc36 (wc36, rd_addr[0]);
  or g500 (n_577, wc37, rd_addr[2]);
  not gc37 (wc37, rd_addr[1]);
  or g501 (n_580, rd_addr[1], wc38);
  not gc38 (wc38, rd_addr[2]);
  or g502 (n_585, rd_addr[0], wc39);
  not gc39 (wc39, rd_addr[3]);
  or g1325 (rd_data[3], n_1125, n_1126);
  or g1326 (rd_data[6], n_855, n_856);
  or g1327 (rd_data[5], n_945, n_946);
  or g1328 (rd_data[2], n_1215, n_1216);
  or g1329 (rd_data[0], n_1395, n_1396);
  or g1330 (rd_data[4], n_1035, n_1036);
  or g1331 (rd_data[1], n_1305, n_1306);
  or g1332 (rd_data[7], n_765, n_766);
  or g1333 (n_1215, n_1211, n_1212);
  or g1334 (n_1305, n_1301, n_1302);
  or g1335 (n_1306, n_1303, n_1304);
  or g1336 (n_1216, n_1213, n_1214);
  or g1337 (n_1035, n_1031, n_1032);
  or g1338 (n_1036, n_1033, n_1034);
  or g1339 (n_1395, n_1391, n_1392);
  or g1340 (n_1396, n_1393, n_1394);
  or g1341 (n_946, n_943, n_944);
  or g1342 (n_945, n_941, n_942);
  or g1343 (n_855, n_851, n_852);
  or g1344 (n_856, n_853, n_854);
  or g1345 (n_766, n_763, n_764);
  or g1346 (n_765, n_761, n_762);
  or g1347 (n_1126, n_1123, n_1124);
  or g1348 (n_1125, n_1121, n_1122);
  or g1349 (n_1124, n_1119, n_1120);
  or g1350 (n_1123, n_1117, n_1118);
  or g1351 (n_1122, n_1115, n_1116);
  or g1352 (n_1121, n_1113, n_1114);
  or g1353 (n_941, n_933, n_934);
  or g1354 (n_942, n_935, n_936);
  or g1355 (n_943, n_937, n_938);
  or g1356 (n_854, n_849, n_850);
  or g1357 (n_853, n_847, n_848);
  or g1358 (n_944, n_939, n_940);
  or g1359 (n_1034, n_1029, n_1030);
  or g1360 (n_1033, n_1027, n_1028);
  or g1361 (n_1304, n_1299, n_1300);
  or g1362 (n_1303, n_1297, n_1298);
  or g1363 (n_1302, n_1295, n_1296);
  or g1364 (n_1301, n_1293, n_1294);
  or g1365 (n_852, n_845, n_846);
  or g1366 (n_851, n_843, n_844);
  or g1367 (n_1211, n_1203, n_1204);
  or g1368 (n_1212, n_1205, n_1206);
  or g1369 (n_1213, n_1207, n_1208);
  or g1370 (n_1214, n_1209, n_1210);
  or g1371 (n_1391, n_1383, n_1384);
  or g1372 (n_1392, n_1385, n_1386);
  or g1373 (n_1393, n_1387, n_1388);
  or g1374 (n_1394, n_1389, n_1390);
  or g1375 (n_1032, n_1025, n_1026);
  or g1376 (n_761, n_753, n_754);
  or g1377 (n_764, n_759, n_760);
  or g1378 (n_763, n_757, n_758);
  or g1379 (n_762, n_755, n_756);
  or g1380 (n_1031, n_1023, n_1024);
  nand g1381 (n_760, n_751, n_752);
  nand g1382 (n_759, n_749, n_750);
  nand g1383 (n_758, n_747, n_748);
  nand g1384 (n_757, n_745, n_746);
  nand g1385 (n_756, n_743, n_744);
  nand g1386 (n_843, n_827, n_828);
  nand g1387 (n_844, n_829, n_830);
  nand g1388 (n_755, n_741, n_742);
  nand g1389 (n_754, n_739, n_740);
  nand g1390 (n_1293, n_1277, n_1278);
  nand g1391 (n_1294, n_1279, n_1280);
  nand g1392 (n_1295, n_1281, n_1282);
  nand g1393 (n_1296, n_1283, n_1284);
  nand g1394 (n_1297, n_1285, n_1286);
  nand g1395 (n_1210, n_1201, n_1202);
  nand g1396 (n_1209, n_1199, n_1200);
  nand g1397 (n_1208, n_1197, n_1198);
  nand g1398 (n_1207, n_1195, n_1196);
  nand g1399 (n_1206, n_1193, n_1194);
  nand g1400 (n_1205, n_1191, n_1192);
  nand g1401 (n_1204, n_1189, n_1190);
  nand g1402 (n_1203, n_1187, n_1188);
  nand g1403 (n_845, n_831, n_832);
  nand g1404 (n_846, n_833, n_834);
  nand g1405 (n_847, n_835, n_836);
  nand g1406 (n_848, n_837, n_838);
  nand g1407 (n_849, n_839, n_840);
  nand g1408 (n_850, n_841, n_842);
  nand g1409 (n_1298, n_1287, n_1288);
  nand g1410 (n_1299, n_1289, n_1290);
  nand g1411 (n_1300, n_1291, n_1292);
  nand g1412 (n_753, n_737, n_738);
  nand g1419 (n_933, n_917, n_918);
  nand g1420 (n_934, n_919, n_920);
  nand g1421 (n_935, n_921, n_922);
  nand g1436 (n_1120, n_1111, n_1112);
  nand g1437 (n_1119, n_1109, n_1110);
  nand g1438 (n_1118, n_1107, n_1108);
  nand g1439 (n_1117, n_1105, n_1106);
  nand g1440 (n_1116, n_1103, n_1104);
  nand g1441 (n_1115, n_1101, n_1102);
  nand g1442 (n_1114, n_1099, n_1100);
  nand g1443 (n_1113, n_1097, n_1098);
  nand g1444 (n_936, n_923, n_924);
  nand g1445 (n_937, n_925, n_926);
  nand g1446 (n_938, n_927, n_928);
  nand g1447 (n_939, n_929, n_930);
  nand g1448 (n_940, n_931, n_932);
  nand g1459 (n_1383, n_1367, n_1368);
  nand g1460 (n_1384, n_1369, n_1370);
  nand g1461 (n_1023, n_1007, n_1008);
  nand g1462 (n_1024, n_1009, n_1010);
  nand g1463 (n_1025, n_1011, n_1012);
  nand g1464 (n_1026, n_1013, n_1014);
  nand g1465 (n_1385, n_1371, n_1372);
  nand g1466 (n_1386, n_1373, n_1374);
  nand g1467 (n_1387, n_1375, n_1376);
  nand g1468 (n_1388, n_1377, n_1378);
  nand g1469 (n_1389, n_1379, n_1380);
  nand g1470 (n_1390, n_1381, n_1382);
  nand g1473 (n_1030, n_1021, n_1022);
  nand g1474 (n_1029, n_1019, n_1020);
  nand g1475 (n_1028, n_1017, n_1018);
  nand g1476 (n_1027, n_1015, n_1016);
  or g1477 (n_1097, n_574, wc40);
  not gc40 (wc40, \mem[0] [3]);
  or g1478 (n_1098, n_576, wc41);
  not gc41 (wc41, \mem[1] [3]);
  or g1479 (n_1099, n_578, wc42);
  not gc42 (wc42, \mem[2] [3]);
  or g1480 (n_1022, n_594, wc43);
  not gc43 (wc43, \mem[15] [4]);
  or g1481 (n_1021, n_593, wc44);
  not gc44 (wc44, \mem[14] [4]);
  or g1482 (n_1020, n_592, wc45);
  not gc45 (wc45, \mem[13] [4]);
  or g1483 (n_1019, n_591, wc46);
  not gc46 (wc46, \mem[12] [4]);
  or g1484 (n_1018, n_590, wc47);
  not gc47 (wc47, \mem[11] [4]);
  or g1485 (n_1017, n_589, wc48);
  not gc48 (wc48, \mem[10] [4]);
  or g1486 (n_1016, n_588, wc49);
  not gc49 (wc49, \mem[9] [4]);
  or g1487 (n_1015, n_586, wc50);
  not gc50 (wc50, \mem[8] [4]);
  or g1488 (n_1014, n_584, wc51);
  not gc51 (wc51, \mem[7] [4]);
  or g1489 (n_1013, n_595, wc52);
  not gc52 (wc52, \mem[6] [4]);
  or g1490 (n_1012, n_582, wc53);
  not gc53 (wc53, \mem[5] [4]);
  or g1491 (n_1011, n_581, wc54);
  not gc54 (wc54, \mem[4] [4]);
  or g1492 (n_1010, n_579, wc55);
  not gc55 (wc55, \mem[3] [4]);
  or g1493 (n_1009, n_578, wc56);
  not gc56 (wc56, \mem[2] [4]);
  or g1494 (n_1008, n_576, wc57);
  not gc57 (wc57, \mem[1] [4]);
  or g1495 (n_1379, n_591, wc58);
  not gc58 (wc58, \mem[12] [0]);
  or g1496 (n_1100, n_579, wc59);
  not gc59 (wc59, \mem[3] [3]);
  or g1497 (n_1101, n_581, wc60);
  not gc60 (wc60, \mem[4] [3]);
  or g1498 (n_1102, n_582, wc61);
  not gc61 (wc61, \mem[5] [3]);
  or g1499 (n_1103, n_595, wc62);
  not gc62 (wc62, \mem[6] [3]);
  or g1500 (n_1104, n_584, wc63);
  not gc63 (wc63, \mem[7] [3]);
  or g1501 (n_1105, n_586, wc64);
  not gc64 (wc64, \mem[8] [3]);
  or g1502 (n_1106, n_588, wc65);
  not gc65 (wc65, \mem[9] [3]);
  or g1503 (n_1107, n_589, wc66);
  not gc66 (wc66, \mem[10] [3]);
  or g1504 (n_1108, n_590, wc67);
  not gc67 (wc67, \mem[11] [3]);
  or g1505 (n_1109, n_591, wc68);
  not gc68 (wc68, \mem[12] [3]);
  or g1506 (n_1110, n_592, wc69);
  not gc69 (wc69, \mem[13] [3]);
  or g1507 (n_1111, n_593, wc70);
  not gc70 (wc70, \mem[14] [3]);
  or g1508 (n_1112, n_594, wc71);
  not gc71 (wc71, \mem[15] [3]);
  or g1509 (n_1187, n_574, wc72);
  not gc72 (wc72, \mem[0] [2]);
  or g1510 (n_1188, n_576, wc73);
  not gc73 (wc73, \mem[1] [2]);
  or g1511 (n_932, n_594, wc74);
  not gc74 (wc74, \mem[15] [5]);
  or g1512 (n_931, n_593, wc75);
  not gc75 (wc75, \mem[14] [5]);
  or g1513 (n_930, n_592, wc76);
  not gc76 (wc76, \mem[13] [5]);
  or g1514 (n_929, n_591, wc77);
  not gc77 (wc77, \mem[12] [5]);
  or g1515 (n_928, n_590, wc78);
  not gc78 (wc78, \mem[11] [5]);
  or g1516 (n_927, n_589, wc79);
  not gc79 (wc79, \mem[10] [5]);
  or g1517 (n_926, n_588, wc80);
  not gc80 (wc80, \mem[9] [5]);
  or g1518 (n_925, n_586, wc81);
  not gc81 (wc81, \mem[8] [5]);
  or g1519 (n_924, n_584, wc82);
  not gc82 (wc82, \mem[7] [5]);
  or g1520 (n_923, n_595, wc83);
  not gc83 (wc83, \mem[6] [5]);
  or g1521 (n_922, n_582, wc84);
  not gc84 (wc84, \mem[5] [5]);
  or g1522 (n_921, n_581, wc85);
  not gc85 (wc85, \mem[4] [5]);
  or g1523 (n_920, n_579, wc86);
  not gc86 (wc86, \mem[3] [5]);
  or g1524 (n_919, n_578, wc87);
  not gc87 (wc87, \mem[2] [5]);
  or g1525 (n_918, n_576, wc88);
  not gc88 (wc88, \mem[1] [5]);
  or g1526 (n_917, n_574, wc89);
  not gc89 (wc89, \mem[0] [5]);
  or g1527 (n_1189, n_578, wc90);
  not gc90 (wc90, \mem[2] [2]);
  or g1528 (n_1190, n_579, wc91);
  not gc91 (wc91, \mem[3] [2]);
  or g1529 (n_1191, n_581, wc92);
  not gc92 (wc92, \mem[4] [2]);
  or g1530 (n_1192, n_582, wc93);
  not gc93 (wc93, \mem[5] [2]);
  or g1531 (n_1193, n_595, wc94);
  not gc94 (wc94, \mem[6] [2]);
  or g1532 (n_1194, n_584, wc95);
  not gc95 (wc95, \mem[7] [2]);
  or g1533 (n_1195, n_586, wc96);
  not gc96 (wc96, \mem[8] [2]);
  or g1534 (n_1196, n_588, wc97);
  not gc97 (wc97, \mem[9] [2]);
  or g1535 (n_1197, n_589, wc98);
  not gc98 (wc98, \mem[10] [2]);
  or g1536 (n_1198, n_590, wc99);
  not gc99 (wc99, \mem[11] [2]);
  or g1537 (n_1199, n_591, wc100);
  not gc100 (wc100, \mem[12] [2]);
  or g1538 (n_1200, n_592, wc101);
  not gc101 (wc101, \mem[13] [2]);
  or g1539 (n_1201, n_593, wc102);
  not gc102 (wc102, \mem[14] [2]);
  or g1540 (n_1202, n_594, wc103);
  not gc103 (wc103, \mem[15] [2]);
  or g1541 (n_1277, n_574, wc104);
  not gc104 (wc104, \mem[0] [1]);
  or g1542 (n_842, n_594, wc105);
  not gc105 (wc105, \mem[15] [6]);
  or g1543 (n_841, n_593, wc106);
  not gc106 (wc106, \mem[14] [6]);
  or g1544 (n_840, n_592, wc107);
  not gc107 (wc107, \mem[13] [6]);
  or g1545 (n_839, n_591, wc108);
  not gc108 (wc108, \mem[12] [6]);
  or g1546 (n_838, n_590, wc109);
  not gc109 (wc109, \mem[11] [6]);
  or g1547 (n_837, n_589, wc110);
  not gc110 (wc110, \mem[10] [6]);
  or g1548 (n_836, n_588, wc111);
  not gc111 (wc111, \mem[9] [6]);
  or g1549 (n_835, n_586, wc112);
  not gc112 (wc112, \mem[8] [6]);
  or g1550 (n_834, n_584, wc113);
  not gc113 (wc113, \mem[7] [6]);
  or g1551 (n_833, n_595, wc114);
  not gc114 (wc114, \mem[6] [6]);
  or g1552 (n_832, n_582, wc115);
  not gc115 (wc115, \mem[5] [6]);
  or g1553 (n_831, n_581, wc116);
  not gc116 (wc116, \mem[4] [6]);
  or g1554 (n_830, n_579, wc117);
  not gc117 (wc117, \mem[3] [6]);
  or g1555 (n_829, n_578, wc118);
  not gc118 (wc118, \mem[2] [6]);
  or g1556 (n_828, n_576, wc119);
  not gc119 (wc119, \mem[1] [6]);
  or g1557 (n_827, n_574, wc120);
  not gc120 (wc120, \mem[0] [6]);
  or g1558 (n_1278, n_576, wc121);
  not gc121 (wc121, \mem[1] [1]);
  or g1559 (n_1279, n_578, wc122);
  not gc122 (wc122, \mem[2] [1]);
  or g1560 (n_1280, n_579, wc123);
  not gc123 (wc123, \mem[3] [1]);
  or g1561 (n_1281, n_581, wc124);
  not gc124 (wc124, \mem[4] [1]);
  or g1562 (n_1282, n_582, wc125);
  not gc125 (wc125, \mem[5] [1]);
  or g1563 (n_1283, n_595, wc126);
  not gc126 (wc126, \mem[6] [1]);
  or g1564 (n_1284, n_584, wc127);
  not gc127 (wc127, \mem[7] [1]);
  or g1565 (n_1285, n_586, wc128);
  not gc128 (wc128, \mem[8] [1]);
  or g1566 (n_1286, n_588, wc129);
  not gc129 (wc129, \mem[9] [1]);
  or g1567 (n_1287, n_589, wc130);
  not gc130 (wc130, \mem[10] [1]);
  or g1568 (n_1288, n_590, wc131);
  not gc131 (wc131, \mem[11] [1]);
  or g1569 (n_1289, n_591, wc132);
  not gc132 (wc132, \mem[12] [1]);
  or g1570 (n_1290, n_592, wc133);
  not gc133 (wc133, \mem[13] [1]);
  or g1571 (n_1291, n_593, wc134);
  not gc134 (wc134, \mem[14] [1]);
  or g1572 (n_1292, n_594, wc135);
  not gc135 (wc135, \mem[15] [1]);
  or g1573 (n_752, n_594, wc136);
  not gc136 (wc136, \mem[15] [7]);
  or g1574 (n_751, n_593, wc137);
  not gc137 (wc137, \mem[14] [7]);
  or g1575 (n_750, n_592, wc138);
  not gc138 (wc138, \mem[13] [7]);
  or g1576 (n_749, n_591, wc139);
  not gc139 (wc139, \mem[12] [7]);
  or g1577 (n_748, n_590, wc140);
  not gc140 (wc140, \mem[11] [7]);
  or g1578 (n_747, n_589, wc141);
  not gc141 (wc141, \mem[10] [7]);
  or g1579 (n_746, n_588, wc142);
  not gc142 (wc142, \mem[9] [7]);
  or g1580 (n_745, n_586, wc143);
  not gc143 (wc143, \mem[8] [7]);
  or g1581 (n_744, n_584, wc144);
  not gc144 (wc144, \mem[7] [7]);
  or g1582 (n_743, n_595, wc145);
  not gc145 (wc145, \mem[6] [7]);
  or g1583 (n_742, n_582, wc146);
  not gc146 (wc146, \mem[5] [7]);
  or g1584 (n_741, n_581, wc147);
  not gc147 (wc147, \mem[4] [7]);
  or g1585 (n_740, n_579, wc148);
  not gc148 (wc148, \mem[3] [7]);
  or g1586 (n_739, n_578, wc149);
  not gc149 (wc149, \mem[2] [7]);
  or g1587 (n_738, n_576, wc150);
  not gc150 (wc150, \mem[1] [7]);
  or g1588 (n_737, n_574, wc151);
  not gc151 (wc151, \mem[0] [7]);
  or g1589 (n_1367, n_574, wc152);
  not gc152 (wc152, \mem[0] [0]);
  or g1590 (n_1368, n_576, wc153);
  not gc153 (wc153, \mem[1] [0]);
  or g1591 (n_676, n_675, wr_addr[3]);
  or g1592 (n_1380, n_592, wc154);
  not gc154 (wc154, \mem[13] [0]);
  or g1593 (n_1369, n_578, wc155);
  not gc155 (wc155, \mem[2] [0]);
  or g1594 (n_1370, n_579, wc156);
  not gc156 (wc156, \mem[3] [0]);
  or g1595 (n_670, n_669, n_605);
  or g1596 (n_640, n_639, n_605);
  or g1597 (n_1371, n_581, wc157);
  not gc157 (wc157, \mem[4] [0]);
  or g1598 (n_1372, n_582, wc158);
  not gc158 (wc158, \mem[5] [0]);
  or g1599 (n_664, n_663, wr_addr[3]);
  or g1600 (n_1007, n_574, wc159);
  not gc159 (wc159, \mem[0] [4]);
  or g1601 (n_1373, n_595, wc160);
  not gc160 (wc160, \mem[6] [0]);
  or g1602 (n_1374, n_584, wc161);
  not gc161 (wc161, \mem[7] [0]);
  or g1603 (n_658, n_657, wr_addr[3]);
  or g1604 (n_1381, n_593, wc162);
  not gc162 (wc162, \mem[14] [0]);
  or g1605 (n_1375, n_586, wc163);
  not gc163 (wc163, \mem[8] [0]);
  or g1606 (n_1376, n_588, wc164);
  not gc164 (wc164, \mem[9] [0]);
  or g1607 (n_652, n_651, wr_addr[3]);
  or g1608 (n_1382, n_594, wc165);
  not gc165 (wc165, \mem[15] [0]);
  or g1609 (n_1377, n_589, wc166);
  not gc166 (wc166, \mem[10] [0]);
  or g1610 (n_1378, n_590, wc167);
  not gc167 (wc167, \mem[11] [0]);
  or g1611 (n_646, n_645, n_605);
  or g1612 (n_634, n_633, n_605);
  or g1613 (n_574, n_572, n_573);
  or g1614 (n_576, n_573, n_575);
  or g1615 (n_675, n_604, n_605);
  or g1616 (n_669, n_604, wc168);
  not gc168 (wc168, wr_addr[3]);
  or g1617 (n_663, n_611, n_605);
  or g1618 (n_657, n_609, n_605);
  or g1619 (n_651, n_607, n_605);
  or g1620 (n_645, n_611, wc169);
  not gc169 (wc169, wr_addr[3]);
  or g1621 (n_639, n_609, wc170);
  not gc170 (wc170, wr_addr[3]);
  or g1622 (n_633, n_607, wc171);
  not gc171 (wc171, wr_addr[3]);
  or g1623 (n_578, n_572, n_577);
  or g1624 (n_579, n_575, n_577);
  or g1625 (n_581, n_572, n_580);
  or g1626 (n_582, n_575, n_580);
  or g1627 (n_584, n_575, n_583);
  or g1628 (n_595, n_572, n_583);
  or g1629 (n_594, n_587, n_583);
  or g1630 (n_593, n_585, n_583);
  or g1631 (n_592, n_587, n_580);
  or g1632 (n_591, n_585, n_580);
  or g1633 (n_590, n_587, n_577);
  or g1634 (n_589, n_585, n_577);
  or g1635 (n_588, n_573, n_587);
  or g1636 (n_586, n_573, n_585);
  or g1637 (n_604, wr_addr[2], wc172);
  not gc172 (wc172, wr_addr[1]);
  or g1638 (n_605, wc173, full);
  not gc173 (wc173, wr_en);
  or g1639 (n_607, wr_addr[1], wr_addr[2]);
  nand g1640 (n_609, wr_addr[1], wr_addr[2]);
  or g1641 (n_611, wc174, wr_addr[1]);
  not gc174 (wc174, wr_addr[2]);
  nor g1642 (n_148, n_676, wr_addr[0]);
  and g1643 (n_150, wr_addr[0], wc175);
  not gc175 (wc175, n_676);
  nor g1644 (n_164, n_670, wr_addr[0]);
  and g1645 (n_166, wr_addr[0], wc176);
  not gc176 (wc176, n_670);
  nor g1646 (n_152, n_664, wr_addr[0]);
  and g1647 (n_154, wr_addr[0], wc177);
  not gc177 (wc177, n_664);
  nor g1648 (n_156, n_658, wr_addr[0]);
  and g1649 (n_158, wr_addr[0], wc178);
  not gc178 (wc178, n_658);
  nor g1650 (n_353, n_652, wr_addr[0]);
  and g1651 (n_146, wr_addr[0], wc179);
  not gc179 (wc179, n_652);
  nor g1652 (n_168, n_646, wr_addr[0]);
  and g1653 (n_170, wr_addr[0], wc180);
  not gc180 (wc180, n_646);
  nor g1654 (n_172, n_640, wr_addr[0]);
  and g1655 (n_174, wr_addr[0], wc181);
  not gc181 (wc181, n_640);
  nor g1656 (n_160, n_634, wr_addr[0]);
  and g1657 (n_162, wr_addr[0], wc182);
  not gc182 (wc182, n_634);
  CDN_flop \mem_reg[0][0] (.clk (clk), .d (wr_data[0]), .sena (n_353),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[0] [0]));
  CDN_flop \mem_reg[0][1] (.clk (clk), .d (wr_data[1]), .sena (n_353),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[0] [1]));
  CDN_flop \mem_reg[0][2] (.clk (clk), .d (wr_data[2]), .sena (n_353),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[0] [2]));
  CDN_flop \mem_reg[0][3] (.clk (clk), .d (wr_data[3]), .sena (n_353),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[0] [3]));
  CDN_flop \mem_reg[0][4] (.clk (clk), .d (wr_data[4]), .sena (n_353),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[0] [4]));
  CDN_flop \mem_reg[0][5] (.clk (clk), .d (wr_data[5]), .sena (n_353),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[0] [5]));
  CDN_flop \mem_reg[0][6] (.clk (clk), .d (wr_data[6]), .sena (n_353),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[0] [6]));
  CDN_flop \mem_reg[0][7] (.clk (clk), .d (wr_data[7]), .sena (n_353),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[0] [7]));
  CDN_flop \mem_reg[1][0] (.clk (clk), .d (wr_data[0]), .sena (n_146),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[1] [0]));
  CDN_flop \mem_reg[1][1] (.clk (clk), .d (wr_data[1]), .sena (n_146),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[1] [1]));
  CDN_flop \mem_reg[1][2] (.clk (clk), .d (wr_data[2]), .sena (n_146),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[1] [2]));
  CDN_flop \mem_reg[1][3] (.clk (clk), .d (wr_data[3]), .sena (n_146),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[1] [3]));
  CDN_flop \mem_reg[1][4] (.clk (clk), .d (wr_data[4]), .sena (n_146),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[1] [4]));
  CDN_flop \mem_reg[1][5] (.clk (clk), .d (wr_data[5]), .sena (n_146),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[1] [5]));
  CDN_flop \mem_reg[1][6] (.clk (clk), .d (wr_data[6]), .sena (n_146),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[1] [6]));
  CDN_flop \mem_reg[1][7] (.clk (clk), .d (wr_data[7]), .sena (n_146),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[1] [7]));
  CDN_flop \mem_reg[2][0] (.clk (clk), .d (wr_data[0]), .sena (n_148),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[2] [0]));
  CDN_flop \mem_reg[2][1] (.clk (clk), .d (wr_data[1]), .sena (n_148),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[2] [1]));
  CDN_flop \mem_reg[2][2] (.clk (clk), .d (wr_data[2]), .sena (n_148),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[2] [2]));
  CDN_flop \mem_reg[2][3] (.clk (clk), .d (wr_data[3]), .sena (n_148),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[2] [3]));
  CDN_flop \mem_reg[2][4] (.clk (clk), .d (wr_data[4]), .sena (n_148),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[2] [4]));
  CDN_flop \mem_reg[2][5] (.clk (clk), .d (wr_data[5]), .sena (n_148),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[2] [5]));
  CDN_flop \mem_reg[2][6] (.clk (clk), .d (wr_data[6]), .sena (n_148),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[2] [6]));
  CDN_flop \mem_reg[2][7] (.clk (clk), .d (wr_data[7]), .sena (n_148),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[2] [7]));
  CDN_flop \mem_reg[3][0] (.clk (clk), .d (wr_data[0]), .sena (n_150),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[3] [0]));
  CDN_flop \mem_reg[3][1] (.clk (clk), .d (wr_data[1]), .sena (n_150),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[3] [1]));
  CDN_flop \mem_reg[3][2] (.clk (clk), .d (wr_data[2]), .sena (n_150),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[3] [2]));
  CDN_flop \mem_reg[3][3] (.clk (clk), .d (wr_data[3]), .sena (n_150),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[3] [3]));
  CDN_flop \mem_reg[3][4] (.clk (clk), .d (wr_data[4]), .sena (n_150),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[3] [4]));
  CDN_flop \mem_reg[3][5] (.clk (clk), .d (wr_data[5]), .sena (n_150),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[3] [5]));
  CDN_flop \mem_reg[3][6] (.clk (clk), .d (wr_data[6]), .sena (n_150),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[3] [6]));
  CDN_flop \mem_reg[3][7] (.clk (clk), .d (wr_data[7]), .sena (n_150),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[3] [7]));
  CDN_flop \mem_reg[4][0] (.clk (clk), .d (wr_data[0]), .sena (n_152),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[4] [0]));
  CDN_flop \mem_reg[4][1] (.clk (clk), .d (wr_data[1]), .sena (n_152),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[4] [1]));
  CDN_flop \mem_reg[4][2] (.clk (clk), .d (wr_data[2]), .sena (n_152),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[4] [2]));
  CDN_flop \mem_reg[4][3] (.clk (clk), .d (wr_data[3]), .sena (n_152),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[4] [3]));
  CDN_flop \mem_reg[4][4] (.clk (clk), .d (wr_data[4]), .sena (n_152),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[4] [4]));
  CDN_flop \mem_reg[4][5] (.clk (clk), .d (wr_data[5]), .sena (n_152),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[4] [5]));
  CDN_flop \mem_reg[4][6] (.clk (clk), .d (wr_data[6]), .sena (n_152),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[4] [6]));
  CDN_flop \mem_reg[4][7] (.clk (clk), .d (wr_data[7]), .sena (n_152),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[4] [7]));
  CDN_flop \mem_reg[5][0] (.clk (clk), .d (wr_data[0]), .sena (n_154),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[5] [0]));
  CDN_flop \mem_reg[5][1] (.clk (clk), .d (wr_data[1]), .sena (n_154),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[5] [1]));
  CDN_flop \mem_reg[5][2] (.clk (clk), .d (wr_data[2]), .sena (n_154),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[5] [2]));
  CDN_flop \mem_reg[5][3] (.clk (clk), .d (wr_data[3]), .sena (n_154),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[5] [3]));
  CDN_flop \mem_reg[5][4] (.clk (clk), .d (wr_data[4]), .sena (n_154),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[5] [4]));
  CDN_flop \mem_reg[5][5] (.clk (clk), .d (wr_data[5]), .sena (n_154),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[5] [5]));
  CDN_flop \mem_reg[5][6] (.clk (clk), .d (wr_data[6]), .sena (n_154),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[5] [6]));
  CDN_flop \mem_reg[5][7] (.clk (clk), .d (wr_data[7]), .sena (n_154),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[5] [7]));
  CDN_flop \mem_reg[6][0] (.clk (clk), .d (wr_data[0]), .sena (n_156),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[6] [0]));
  CDN_flop \mem_reg[6][1] (.clk (clk), .d (wr_data[1]), .sena (n_156),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[6] [1]));
  CDN_flop \mem_reg[6][2] (.clk (clk), .d (wr_data[2]), .sena (n_156),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[6] [2]));
  CDN_flop \mem_reg[6][3] (.clk (clk), .d (wr_data[3]), .sena (n_156),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[6] [3]));
  CDN_flop \mem_reg[6][4] (.clk (clk), .d (wr_data[4]), .sena (n_156),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[6] [4]));
  CDN_flop \mem_reg[6][5] (.clk (clk), .d (wr_data[5]), .sena (n_156),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[6] [5]));
  CDN_flop \mem_reg[6][6] (.clk (clk), .d (wr_data[6]), .sena (n_156),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[6] [6]));
  CDN_flop \mem_reg[6][7] (.clk (clk), .d (wr_data[7]), .sena (n_156),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[6] [7]));
  CDN_flop \mem_reg[7][0] (.clk (clk), .d (wr_data[0]), .sena (n_158),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[7] [0]));
  CDN_flop \mem_reg[7][1] (.clk (clk), .d (wr_data[1]), .sena (n_158),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[7] [1]));
  CDN_flop \mem_reg[7][2] (.clk (clk), .d (wr_data[2]), .sena (n_158),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[7] [2]));
  CDN_flop \mem_reg[7][3] (.clk (clk), .d (wr_data[3]), .sena (n_158),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[7] [3]));
  CDN_flop \mem_reg[7][4] (.clk (clk), .d (wr_data[4]), .sena (n_158),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[7] [4]));
  CDN_flop \mem_reg[7][5] (.clk (clk), .d (wr_data[5]), .sena (n_158),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[7] [5]));
  CDN_flop \mem_reg[7][6] (.clk (clk), .d (wr_data[6]), .sena (n_158),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[7] [6]));
  CDN_flop \mem_reg[7][7] (.clk (clk), .d (wr_data[7]), .sena (n_158),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[7] [7]));
  CDN_flop \mem_reg[8][0] (.clk (clk), .d (wr_data[0]), .sena (n_160),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[8] [0]));
  CDN_flop \mem_reg[8][1] (.clk (clk), .d (wr_data[1]), .sena (n_160),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[8] [1]));
  CDN_flop \mem_reg[8][2] (.clk (clk), .d (wr_data[2]), .sena (n_160),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[8] [2]));
  CDN_flop \mem_reg[8][3] (.clk (clk), .d (wr_data[3]), .sena (n_160),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[8] [3]));
  CDN_flop \mem_reg[8][4] (.clk (clk), .d (wr_data[4]), .sena (n_160),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[8] [4]));
  CDN_flop \mem_reg[8][5] (.clk (clk), .d (wr_data[5]), .sena (n_160),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[8] [5]));
  CDN_flop \mem_reg[8][6] (.clk (clk), .d (wr_data[6]), .sena (n_160),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[8] [6]));
  CDN_flop \mem_reg[8][7] (.clk (clk), .d (wr_data[7]), .sena (n_160),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[8] [7]));
  CDN_flop \mem_reg[9][0] (.clk (clk), .d (wr_data[0]), .sena (n_162),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[9] [0]));
  CDN_flop \mem_reg[9][1] (.clk (clk), .d (wr_data[1]), .sena (n_162),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[9] [1]));
  CDN_flop \mem_reg[9][2] (.clk (clk), .d (wr_data[2]), .sena (n_162),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[9] [2]));
  CDN_flop \mem_reg[9][3] (.clk (clk), .d (wr_data[3]), .sena (n_162),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[9] [3]));
  CDN_flop \mem_reg[9][4] (.clk (clk), .d (wr_data[4]), .sena (n_162),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[9] [4]));
  CDN_flop \mem_reg[9][5] (.clk (clk), .d (wr_data[5]), .sena (n_162),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[9] [5]));
  CDN_flop \mem_reg[9][6] (.clk (clk), .d (wr_data[6]), .sena (n_162),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[9] [6]));
  CDN_flop \mem_reg[9][7] (.clk (clk), .d (wr_data[7]), .sena (n_162),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[9] [7]));
  CDN_flop \mem_reg[10][0] (.clk (clk), .d (wr_data[0]), .sena (n_164),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[10] [0]));
  CDN_flop \mem_reg[10][1] (.clk (clk), .d (wr_data[1]), .sena (n_164),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[10] [1]));
  CDN_flop \mem_reg[10][2] (.clk (clk), .d (wr_data[2]), .sena (n_164),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[10] [2]));
  CDN_flop \mem_reg[10][3] (.clk (clk), .d (wr_data[3]), .sena (n_164),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[10] [3]));
  CDN_flop \mem_reg[10][4] (.clk (clk), .d (wr_data[4]), .sena (n_164),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[10] [4]));
  CDN_flop \mem_reg[10][5] (.clk (clk), .d (wr_data[5]), .sena (n_164),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[10] [5]));
  CDN_flop \mem_reg[10][6] (.clk (clk), .d (wr_data[6]), .sena (n_164),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[10] [6]));
  CDN_flop \mem_reg[10][7] (.clk (clk), .d (wr_data[7]), .sena (n_164),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[10] [7]));
  CDN_flop \mem_reg[11][0] (.clk (clk), .d (wr_data[0]), .sena (n_166),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[11] [0]));
  CDN_flop \mem_reg[11][1] (.clk (clk), .d (wr_data[1]), .sena (n_166),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[11] [1]));
  CDN_flop \mem_reg[11][2] (.clk (clk), .d (wr_data[2]), .sena (n_166),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[11] [2]));
  CDN_flop \mem_reg[11][3] (.clk (clk), .d (wr_data[3]), .sena (n_166),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[11] [3]));
  CDN_flop \mem_reg[11][4] (.clk (clk), .d (wr_data[4]), .sena (n_166),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[11] [4]));
  CDN_flop \mem_reg[11][5] (.clk (clk), .d (wr_data[5]), .sena (n_166),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[11] [5]));
  CDN_flop \mem_reg[11][6] (.clk (clk), .d (wr_data[6]), .sena (n_166),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[11] [6]));
  CDN_flop \mem_reg[11][7] (.clk (clk), .d (wr_data[7]), .sena (n_166),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[11] [7]));
  CDN_flop \mem_reg[12][0] (.clk (clk), .d (wr_data[0]), .sena (n_168),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[12] [0]));
  CDN_flop \mem_reg[12][1] (.clk (clk), .d (wr_data[1]), .sena (n_168),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[12] [1]));
  CDN_flop \mem_reg[12][2] (.clk (clk), .d (wr_data[2]), .sena (n_168),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[12] [2]));
  CDN_flop \mem_reg[12][3] (.clk (clk), .d (wr_data[3]), .sena (n_168),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[12] [3]));
  CDN_flop \mem_reg[12][4] (.clk (clk), .d (wr_data[4]), .sena (n_168),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[12] [4]));
  CDN_flop \mem_reg[12][5] (.clk (clk), .d (wr_data[5]), .sena (n_168),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[12] [5]));
  CDN_flop \mem_reg[12][6] (.clk (clk), .d (wr_data[6]), .sena (n_168),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[12] [6]));
  CDN_flop \mem_reg[12][7] (.clk (clk), .d (wr_data[7]), .sena (n_168),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[12] [7]));
  CDN_flop \mem_reg[13][0] (.clk (clk), .d (wr_data[0]), .sena (n_170),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[13] [0]));
  CDN_flop \mem_reg[13][1] (.clk (clk), .d (wr_data[1]), .sena (n_170),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[13] [1]));
  CDN_flop \mem_reg[13][2] (.clk (clk), .d (wr_data[2]), .sena (n_170),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[13] [2]));
  CDN_flop \mem_reg[13][3] (.clk (clk), .d (wr_data[3]), .sena (n_170),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[13] [3]));
  CDN_flop \mem_reg[13][4] (.clk (clk), .d (wr_data[4]), .sena (n_170),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[13] [4]));
  CDN_flop \mem_reg[13][5] (.clk (clk), .d (wr_data[5]), .sena (n_170),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[13] [5]));
  CDN_flop \mem_reg[13][6] (.clk (clk), .d (wr_data[6]), .sena (n_170),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[13] [6]));
  CDN_flop \mem_reg[13][7] (.clk (clk), .d (wr_data[7]), .sena (n_170),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[13] [7]));
  CDN_flop \mem_reg[14][0] (.clk (clk), .d (wr_data[0]), .sena (n_172),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[14] [0]));
  CDN_flop \mem_reg[14][1] (.clk (clk), .d (wr_data[1]), .sena (n_172),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[14] [1]));
  CDN_flop \mem_reg[14][2] (.clk (clk), .d (wr_data[2]), .sena (n_172),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[14] [2]));
  CDN_flop \mem_reg[14][3] (.clk (clk), .d (wr_data[3]), .sena (n_172),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[14] [3]));
  CDN_flop \mem_reg[14][4] (.clk (clk), .d (wr_data[4]), .sena (n_172),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[14] [4]));
  CDN_flop \mem_reg[14][5] (.clk (clk), .d (wr_data[5]), .sena (n_172),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[14] [5]));
  CDN_flop \mem_reg[14][6] (.clk (clk), .d (wr_data[6]), .sena (n_172),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[14] [6]));
  CDN_flop \mem_reg[14][7] (.clk (clk), .d (wr_data[7]), .sena (n_172),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[14] [7]));
  CDN_flop \mem_reg[15][0] (.clk (clk), .d (wr_data[0]), .sena (n_174),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[15] [0]));
  CDN_flop \mem_reg[15][1] (.clk (clk), .d (wr_data[1]), .sena (n_174),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[15] [1]));
  CDN_flop \mem_reg[15][2] (.clk (clk), .d (wr_data[2]), .sena (n_174),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[15] [2]));
  CDN_flop \mem_reg[15][3] (.clk (clk), .d (wr_data[3]), .sena (n_174),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[15] [3]));
  CDN_flop \mem_reg[15][4] (.clk (clk), .d (wr_data[4]), .sena (n_174),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[15] [4]));
  CDN_flop \mem_reg[15][5] (.clk (clk), .d (wr_data[5]), .sena (n_174),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[15] [5]));
  CDN_flop \mem_reg[15][6] (.clk (clk), .d (wr_data[6]), .sena (n_174),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[15] [6]));
  CDN_flop \mem_reg[15][7] (.clk (clk), .d (wr_data[7]), .sena (n_174),
       .aclr (n_354), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\mem[15] [7]));
endmodule

module dff_37(clk, rst, wr_data, rd_data);
  input clk, rst;
  input [4:0] wr_data;
  output [4:0] rd_data;
  wire clk, rst;
  wire [4:0] wr_data;
  wire [4:0] rd_data;
  wire n_34;
  not g1 (n_34, rst);
  CDN_flop \rd_data_reg[0] (.clk (clk), .d (wr_data[0]), .sena (1'b1),
       .aclr (n_34), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (rd_data[0]));
  CDN_flop \rd_data_reg[1] (.clk (clk), .d (wr_data[1]), .sena (1'b1),
       .aclr (n_34), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (rd_data[1]));
  CDN_flop \rd_data_reg[2] (.clk (clk), .d (wr_data[2]), .sena (1'b1),
       .aclr (n_34), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (rd_data[2]));
  CDN_flop \rd_data_reg[3] (.clk (clk), .d (wr_data[3]), .sena (1'b1),
       .aclr (n_34), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (rd_data[3]));
  CDN_flop \rd_data_reg[4] (.clk (clk), .d (wr_data[4]), .sena (1'b1),
       .aclr (n_34), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (rd_data[4]));
endmodule

module dff_36(clk, rst, wr_data, rd_data);
  input clk, rst;
  input [4:0] wr_data;
  output [4:0] rd_data;
  wire clk, rst;
  wire [4:0] wr_data;
  wire [4:0] rd_data;
  wire n_34;
  not g1 (n_34, rst);
  CDN_flop \rd_data_reg[0] (.clk (clk), .d (wr_data[0]), .sena (1'b1),
       .aclr (n_34), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (rd_data[0]));
  CDN_flop \rd_data_reg[1] (.clk (clk), .d (wr_data[1]), .sena (1'b1),
       .aclr (n_34), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (rd_data[1]));
  CDN_flop \rd_data_reg[2] (.clk (clk), .d (wr_data[2]), .sena (1'b1),
       .aclr (n_34), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (rd_data[2]));
  CDN_flop \rd_data_reg[3] (.clk (clk), .d (wr_data[3]), .sena (1'b1),
       .aclr (n_34), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (rd_data[3]));
  CDN_flop \rd_data_reg[4] (.clk (clk), .d (wr_data[4]), .sena (1'b1),
       .aclr (n_34), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (rd_data[4]));
endmodule

module cdc_synchronizer_35(clk, rst, in_data, out_data);
  input clk, rst;
  input [4:0] in_data;
  output [4:0] out_data;
  wire clk, rst;
  wire [4:0] in_data;
  wire [4:0] out_data;
  wire [4:0] in_data_n;
  dff_37 dff_1(.clk (clk), .rst (rst), .wr_data (in_data), .rd_data
       (in_data_n));
  dff_36 dff_2(.clk (clk), .rst (rst), .wr_data (in_data_n), .rd_data
       (out_data));
endmodule

module dff(clk, rst, wr_data, rd_data);
  input clk, rst;
  input [4:0] wr_data;
  output [4:0] rd_data;
  wire clk, rst;
  wire [4:0] wr_data;
  wire [4:0] rd_data;
  wire n_34;
  not g1 (n_34, rst);
  CDN_flop \rd_data_reg[0] (.clk (clk), .d (wr_data[0]), .sena (1'b1),
       .aclr (n_34), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (rd_data[0]));
  CDN_flop \rd_data_reg[1] (.clk (clk), .d (wr_data[1]), .sena (1'b1),
       .aclr (n_34), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (rd_data[1]));
  CDN_flop \rd_data_reg[2] (.clk (clk), .d (wr_data[2]), .sena (1'b1),
       .aclr (n_34), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (rd_data[2]));
  CDN_flop \rd_data_reg[3] (.clk (clk), .d (wr_data[3]), .sena (1'b1),
       .aclr (n_34), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (rd_data[3]));
  CDN_flop \rd_data_reg[4] (.clk (clk), .d (wr_data[4]), .sena (1'b1),
       .aclr (n_34), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (rd_data[4]));
endmodule

module dff_38(clk, rst, wr_data, rd_data);
  input clk, rst;
  input [4:0] wr_data;
  output [4:0] rd_data;
  wire clk, rst;
  wire [4:0] wr_data;
  wire [4:0] rd_data;
  wire n_34;
  not g1 (n_34, rst);
  CDN_flop \rd_data_reg[0] (.clk (clk), .d (wr_data[0]), .sena (1'b1),
       .aclr (n_34), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (rd_data[0]));
  CDN_flop \rd_data_reg[1] (.clk (clk), .d (wr_data[1]), .sena (1'b1),
       .aclr (n_34), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (rd_data[1]));
  CDN_flop \rd_data_reg[2] (.clk (clk), .d (wr_data[2]), .sena (1'b1),
       .aclr (n_34), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (rd_data[2]));
  CDN_flop \rd_data_reg[3] (.clk (clk), .d (wr_data[3]), .sena (1'b1),
       .aclr (n_34), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (rd_data[3]));
  CDN_flop \rd_data_reg[4] (.clk (clk), .d (wr_data[4]), .sena (1'b1),
       .aclr (n_34), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (rd_data[4]));
endmodule

module cdc_synchronizer(clk, rst, in_data, out_data);
  input clk, rst;
  input [4:0] in_data;
  output [4:0] out_data;
  wire clk, rst;
  wire [4:0] in_data;
  wire [4:0] out_data;
  wire [4:0] in_data_n;
  dff dff_1(.clk (clk), .rst (rst), .wr_data (in_data), .rd_data
       (in_data_n));
  dff_38 dff_2(.clk (clk), .rst (rst), .wr_data (in_data_n), .rd_data
       (out_data));
endmodule

module fifo_top(wr_clk_pad, rd_clk_pad, wr_en_pad, rd_en_pad,
     wr_rst_pad, rd_rst_pad, wr_data_pad, rd_data_pad, empty_pad,
     full_pad);
  input wr_clk_pad, rd_clk_pad, wr_en_pad, rd_en_pad, wr_rst_pad,
       rd_rst_pad;
  input [7:0] wr_data_pad;
  output [7:0] rd_data_pad;
  output empty_pad, full_pad;
  wire wr_clk_pad, rd_clk_pad, wr_en_pad, rd_en_pad, wr_rst_pad,
       rd_rst_pad;
  wire [7:0] wr_data_pad;
  wire [7:0] rd_data_pad;
  wire empty_pad, full_pad;
  wire [4:0] wr_addr_grey_sync;
  wire [4:0] rd_addr_grey;
  wire [3:0] rd_addr;
  wire [4:0] rd_addr_grey_sync;
  wire [4:0] wr_addr_grey;
  wire [3:0] wr_addr;
  wire [7:0] wr_data;
  wire [7:0] rd_data;
  wire empty, full, rd_clk, rd_en, rd_rst, read_clk, wr_clk, wr_en;
  wire wr_rst, write_clk;
  fifo_empty e(.rd_clk (rd_clk), .rd_en (rd_en), .rd_rst (rd_rst),
       .wr_ptr_addr_sync (wr_addr_grey_sync), .empty (empty),
       .rd_addr_grey (rd_addr_grey), .rd_addr_bin (rd_addr));
  fifo_full f(.wr_clk (wr_clk), .wr_en (wr_en), .wr_rst (wr_rst),
       .rd_ptr_addr_sync (rd_addr_grey_sync), .full (full),
       .wr_addr_grey (wr_addr_grey), .wr_addr_bin (wr_addr));
  fifo_memory m(.clk (wr_clk), .rst (wr_rst), .wr_en (wr_en), .full
       (full), .wr_addr (wr_addr), .rd_addr (rd_addr), .wr_data
       (wr_data), .rd_data (rd_data));
  cdc_synchronizer_35 rd_addr_sync(.clk (rd_clk), .rst (rd_rst),
       .in_data (wr_addr_grey), .out_data (wr_addr_grey_sync));
  cdc_synchronizer wr_addr_sync(.clk (wr_clk), .rst (wr_rst), .in_data
       (rd_addr_grey), .out_data (rd_addr_grey_sync));
  pc3c01 pc3c01_1(.CCLK (read_clk), .CP (rd_clk));
  pc3c01 pc3c01_2(.CCLK (write_clk), .CP (wr_clk));
  pc3d01 pc3d01_1(.PAD (rd_clk_pad), .CIN (read_clk));
  pc3d01 pc3d01_2(.PAD (wr_clk_pad), .CIN (write_clk));
  pc3d01 pc3d01_3(.PAD (wr_rst_pad), .CIN (wr_rst));
  pc3d01 pc3d01_4(.PAD (rd_rst_pad), .CIN (rd_rst));
  pc3d01 pc3d01_5(.PAD (wr_en_pad), .CIN (wr_en));
  pc3d01 pc3d01_6(.PAD (rd_en_pad), .CIN (rd_en));
  pc3d01 pc3d01_7(.PAD (wr_data_pad[7]), .CIN (wr_data[7]));
  pc3d01 pc3d01_8(.PAD (wr_data_pad[6]), .CIN (wr_data[6]));
  pc3d01 pc3d01_9(.PAD (wr_data_pad[5]), .CIN (wr_data[5]));
  pc3d01 pc3d01_10(.PAD (wr_data_pad[4]), .CIN (wr_data[4]));
  pc3d01 pc3d01_11(.PAD (wr_data_pad[3]), .CIN (wr_data[3]));
  pc3d01 pc3d01_12(.PAD (wr_data_pad[2]), .CIN (wr_data[2]));
  pc3d01 pc3d01_13(.PAD (wr_data_pad[1]), .CIN (wr_data[1]));
  pc3d01 pc3d01_14(.PAD (wr_data_pad[0]), .CIN (wr_data[0]));
  pc3o05 pc3o05_1(.I (rd_data[7]), .PAD (rd_data_pad[7]));
  pc3o05 pc3o05_2(.I (rd_data[6]), .PAD (rd_data_pad[6]));
  pc3o05 pc3o05_3(.I (rd_data[5]), .PAD (rd_data_pad[5]));
  pc3o05 pc3o05_4(.I (rd_data[4]), .PAD (rd_data_pad[4]));
  pc3o05 pc3o05_5(.I (rd_data[3]), .PAD (rd_data_pad[3]));
  pc3o05 pc3o05_6(.I (rd_data[2]), .PAD (rd_data_pad[2]));
  pc3o05 pc3o05_7(.I (rd_data[1]), .PAD (rd_data_pad[1]));
  pc3o05 pc3o05_8(.I (rd_data[0]), .PAD (rd_data_pad[0]));
  pc3o05 pc3o05_9(.I (full), .PAD (full_pad));
  pc3o05 pc3o05_10(.I (empty), .PAD (empty_pad));
endmodule

`ifdef RC_CDN_GENERIC_GATE
`else
module CDN_flop(clk, d, sena, aclr, apre, srl, srd, q);
  input clk, d, sena, aclr, apre, srl, srd;
  output q;
  wire clk, d, sena, aclr, apre, srl, srd;
  wire q;
  reg  qi;
  assign #1 q = qi;
  always 
    @(posedge clk or posedge apre or posedge aclr) 
      if (aclr) 
        qi <= 0;
      else if (apre) 
          qi <= 1;
        else if (srl) 
            qi <= srd;
          else begin
            if (sena) 
              qi <= d;
          end
  initial 
    qi <= 1'b0;
endmodule
`endif
