#==============================================================================
# Hierarchical dofile generated by Conformal LEC
# Version: 21.20-p100 (23-Oct-2021) (64 bit executable)
#------------------------------------------------------------------------------
# For additional reporting on 'not written' modules, see the 'VERBOSE REPORTING'
# section at the end of the hierarchical dofile
#------------------------------------------------------------------------------
# The command 'set module property' sets the instance context for the current
# root module. It is intended only for hierarchical comparison, and should
# not be modified by the user.
#------------------------------------------------------------------------------
# TERMS AND NOTATIONS USED
#------------------------------------------------------------------------------
# Module Instantiation Ratio: Average number of instantiations per matching module
# Wrapper size: #Logic gates enclosing the module's instance, and bounded by key-points
# Periphery size: #Logic gates in the fanin and fanout cone of instance's input and output boundary, and bounded by key-points
# 0: Indicates pin is constant zero
# 1: Indicates pin is constant one
# X: Indicates pin is full DC
# U: Indicates pin is unreachable
# Z: Indicates pin is floating
# KP<--: Indicates pin's fanin is directly connected to key-point (ignores buffers/inverters)
# -->KP: Indicates pin's fanout is directly connected to key-point (ignores buffers/inverters)
# REP: Indicates pin is representative pin
# EQ_REP: <polarity> rep_pinname>: Indicates pin is a member EQ pin with
# 'rep_pinname' specifying the representative, and 'polarity' specifying
# if it is positive or negative equivalent
# = : Indicates that the pins on LHS and RHS are mapped
# + : Indicates positive polarity for pin mapping
# - : Indicates negative polarity for pin mapping
# ? : Indicates unknown polarity for pin mapping
# G: Indicates that the pin belongs to Golden
# R: Indicates that the pin belongs to Revised
# IN: Indicates that the pin is an Input pin
# OUT: Indicates that the pin is an Output pin
# IO: Indicates that the pin is an Inout pin. Polarity of Inout pin is
#     always '?' because of name-only mapping
#==============================================================================

set_system_mode setup
vpxmode
delete set_seq_merge
set_seq_merge /e/empty_r_reg  /e/empty_reg -Golden
set_seq_merge /e/rd_addr_bin_r_reg[4]  /e/rd_addr_grey_reg[4] -Golden
set_seq_merge /f/full_r_reg  /f/full_reg -Golden
set_seq_merge /f/wr_addr_bin_r_reg[4]  /f/wr_addr_grey_reg[4] -Golden
tclmode
# Comparing
#-------------------------------------------------------------------------------
# MODULE fifo_full (G) INSTANCE /f (G)
# MODULE fifo_full (R) INSTANCE /f (R)
# Primitive count:  (G) = 44  (R) = 70
# Wrapper size: (G) = 273  (R) = 415
# Periphery size: (G) = 296  (R) = 449
# Pins directly connected to key-points/constants: (G) = 100.00%  (R) = 100.00%
#-------------------------------------------------------------------------------
# RESOLVED Constraints
# IN (G) wr_clk  (KP<--)(REP)  =   (R) wr_clk  (KP<--)(REP) (by sim and name)
# IN (G) wr_en  (KP<--)(REP)  =   (R) wr_en  (KP<--)(REP) (by sim and name)
# IN (G) wr_rst  (KP<--)(REP)  =   (R) wr_rst  (KP<--)(REP) (by sim and name)
# IN (G) rd_ptr_addr_sync[4]  (KP<--)(REP)  =   (R) rd_ptr_addr_sync[4]  (KP<--)(REP) (by sim and name)
# IN (G) rd_ptr_addr_sync[3]  (KP<--)(REP)  =   (R) rd_ptr_addr_sync[3]  (KP<--)(REP) (by sim and name)
# IN (G) rd_ptr_addr_sync[2]  (KP<--)(REP)  =   (R) rd_ptr_addr_sync[2]  (KP<--)(REP) (by sim and name)
# IN (G) rd_ptr_addr_sync[1]  (KP<--)(REP)  =   (R) rd_ptr_addr_sync[1]  (KP<--)(REP) (by sim and name)
# IN (G) rd_ptr_addr_sync[0]  (KP<--)(REP)  =   (R) rd_ptr_addr_sync[0]  (KP<--)(REP) (by sim and name)
# RESOLVED Constraints
# OUT (G) full  (KP<--)(REP)  =   (R) full  (KP<--)(REP) (by sim and name)
# OUT (G) wr_addr_grey[4]  (KP<--)(REP)  =   (R) wr_addr_grey[4]  (KP<--)(REP) (by sim and name)
# OUT (G) wr_addr_grey[3]  (KP<--)(REP)  =   (R) wr_addr_grey[3]  (KP<--)(REP) (by sim and name)
# OUT (G) wr_addr_grey[2]  (KP<--)(REP)  =   (R) wr_addr_grey[2]  (KP<--)(REP) (by sim and name)
# OUT (G) wr_addr_grey[1]  (KP<--)(REP)  =   (R) wr_addr_grey[1]  (KP<--)(REP) (by sim and name)
# OUT (G) wr_addr_grey[0]  (KP<--)(REP)  =   (R) wr_addr_grey[0]  (KP<--)(REP) (by sim and name)
# OUT (G) wr_addr_bin[3]  (KP<--)(REP)  =   (R) wr_addr_bin[3]  (KP<--)(REP) (by sim and name)
# OUT (G) wr_addr_bin[2]  (KP<--)(REP)  =   (R) wr_addr_bin[2]  (KP<--)(REP) (by sim and name)
# OUT (G) wr_addr_bin[1]  (KP<--)(REP)  =   (R) wr_addr_bin[1]  (KP<--)(REP) (by sim and name)
# OUT (G) wr_addr_bin[0]  (KP<--)(REP)  =   (R) wr_addr_bin[0]  (KP<--)(REP) (by sim and name)
set_root_module fifo_full -Golden
set_root_module fifo_full -Revised
set_module_property -instance /f -Golden
set_module_property -instance /f -Revised
report_black_box -NOHidden
set_system_mode lec
report_design_data; report_unmapped_points -summary; report_unmapped_points -notmapped; analyze_datapath -module -verbose; eval analyze_datapath -flowgraph -verbose
add_compared_points -all
compare
save_hier_compare_result
set_system_mode setup
add_black_box fifo_full -module -hier -Golden
add_black_box fifo_full -module -hier -Revised
usage
# Comparing
#-------------------------------------------------------------------------------
# MODULE fifo_empty (G) INSTANCE /e (G)
# MODULE fifo_empty (R) INSTANCE /e (R)
# Primitive count:  (G) = 44  (R) = 72
# Wrapper size: (G) = 152  (R) = 224
# Periphery size: (G) = 175  (R) = 259
# Pins directly connected to key-points/constants: (G) = 100.00%  (R) = 100.00%
#-------------------------------------------------------------------------------
# RESOLVED Constraints
# IN (G) rd_clk  (KP<--)(REP)  =   (R) rd_clk  (KP<--)(REP) (by sim and name)
# IN (G) rd_en  (KP<--)(REP)  =   (R) rd_en  (KP<--)(REP) (by sim and name)
# IN (G) rd_rst  (KP<--)(REP)  =   (R) rd_rst  (KP<--)(REP) (by sim and name)
# IN (G) wr_ptr_addr_sync[4]  (KP<--)(REP)  =   (R) wr_ptr_addr_sync[4]  (KP<--)(REP) (by sim and name)
# IN (G) wr_ptr_addr_sync[3]  (KP<--)(REP)  =   (R) wr_ptr_addr_sync[3]  (KP<--)(REP) (by sim and name)
# IN (G) wr_ptr_addr_sync[2]  (KP<--)(REP)  =   (R) wr_ptr_addr_sync[2]  (KP<--)(REP) (by sim and name)
# IN (G) wr_ptr_addr_sync[1]  (KP<--)(REP)  =   (R) wr_ptr_addr_sync[1]  (KP<--)(REP) (by sim and name)
# IN (G) wr_ptr_addr_sync[0]  (KP<--)(REP)  =   (R) wr_ptr_addr_sync[0]  (KP<--)(REP) (by sim and name)
# RESOLVED Constraints
# OUT (G) empty  (KP<--)(REP)  =   (R) empty  (KP<--)(REP) (by sim and name)
# OUT (G) rd_addr_grey[4]  (KP<--)(REP)  =   (R) rd_addr_grey[4]  (KP<--)(REP) (by sim and name)
# OUT (G) rd_addr_grey[3]  (KP<--)(REP)  =   (R) rd_addr_grey[3]  (KP<--)(REP) (by sim and name)
# OUT (G) rd_addr_grey[2]  (KP<--)(REP)  =   (R) rd_addr_grey[2]  (KP<--)(REP) (by sim and name)
# OUT (G) rd_addr_grey[1]  (KP<--)(REP)  =   (R) rd_addr_grey[1]  (KP<--)(REP) (by sim and name)
# OUT (G) rd_addr_grey[0]  (KP<--)(REP)  =   (R) rd_addr_grey[0]  (KP<--)(REP) (by sim and name)
# OUT (G) rd_addr_bin[3]  (KP<--)(REP)  =   (R) rd_addr_bin[3]  (KP<--)(REP) (by sim and name)
# OUT (G) rd_addr_bin[2]  (KP<--)(REP)  =   (R) rd_addr_bin[2]  (KP<--)(REP) (by sim and name)
# OUT (G) rd_addr_bin[1]  (KP<--)(REP)  =   (R) rd_addr_bin[1]  (KP<--)(REP) (by sim and name)
# OUT (G) rd_addr_bin[0]  (KP<--)(REP)  =   (R) rd_addr_bin[0]  (KP<--)(REP) (by sim and name)
set_root_module fifo_empty -Golden
set_root_module fifo_empty -Revised
set_module_property -instance /e -Golden
set_module_property -instance /e -Revised
report_black_box -NOHidden
set_system_mode lec
report_design_data; report_unmapped_points -summary; report_unmapped_points -notmapped; analyze_datapath -module -verbose; eval analyze_datapath -flowgraph -verbose
add_compared_points -all
compare
save_hier_compare_result
set_system_mode setup
add_black_box fifo_empty -module -hier -Golden
add_black_box fifo_empty -module -hier -Revised
usage
# Comparing
#-------------------------------------------------------------------------------
# MODULE fifo_memory (G) INSTANCE /m (G)
# MODULE fifo_memory (R) INSTANCE /m (R)
# Wrapper size: (G) = 0  (R) = 0
# Periphery size: (G) = 577  (R) = 863
# Pins directly connected to key-points/constants: (G) = 100.00%  (R) = 100.00%
#-------------------------------------------------------------------------------
# RESOLVED Constraints
# IN (G) clk  (KP<--)(REP)  =   (R) clk  (KP<--)(REP) (by sim and name)
# IN (G) rst  (KP<--)(REP)  =   (R) rst  (KP<--)(REP) (by sim and name)
# IN (G) wr_en  (KP<--)(REP)  =   (R) wr_en  (KP<--)(REP) (by sim and name)
# IN (G) full  (KP<--)(REP)  =   (R) full  (KP<--)(REP) (by sim and name)
# IN (G) wr_addr[3]  (KP<--)(REP)  =   (R) wr_addr[3]  (KP<--)(REP) (by sim and name)
# IN (G) wr_addr[2]  (KP<--)(REP)  =   (R) wr_addr[2]  (KP<--)(REP) (by sim and name)
# IN (G) wr_addr[1]  (KP<--)(REP)  =   (R) wr_addr[1]  (KP<--)(REP) (by sim and name)
# IN (G) wr_addr[0]  (KP<--)(REP)  =   (R) wr_addr[0]  (KP<--)(REP) (by sim and name)
# IN (G) rd_addr[3]  (KP<--)(REP)  =   (R) rd_addr[3]  (KP<--)(REP) (by sim and name)
# IN (G) rd_addr[2]  (KP<--)(REP)  =   (R) rd_addr[2]  (KP<--)(REP) (by sim and name)
# IN (G) rd_addr[1]  (KP<--)(REP)  =   (R) rd_addr[1]  (KP<--)(REP) (by sim and name)
# IN (G) rd_addr[0]  (KP<--)(REP)  =   (R) rd_addr[0]  (KP<--)(REP) (by sim and name)
# IN (G) wr_data[7]  (KP<--)(REP)  =   (R) wr_data[7]  (KP<--)(REP) (by sim and name)
# IN (G) wr_data[6]  (KP<--)(REP)  =   (R) wr_data[6]  (KP<--)(REP) (by sim and name)
# IN (G) wr_data[5]  (KP<--)(REP)  =   (R) wr_data[5]  (KP<--)(REP) (by sim and name)
# IN (G) wr_data[4]  (KP<--)(REP)  =   (R) wr_data[4]  (KP<--)(REP) (by sim and name)
# IN (G) wr_data[3]  (KP<--)(REP)  =   (R) wr_data[3]  (KP<--)(REP) (by sim and name)
# IN (G) wr_data[2]  (KP<--)(REP)  =   (R) wr_data[2]  (KP<--)(REP) (by sim and name)
# IN (G) wr_data[1]  (KP<--)(REP)  =   (R) wr_data[1]  (KP<--)(REP) (by sim and name)
# IN (G) wr_data[0]  (KP<--)(REP)  =   (R) wr_data[0]  (KP<--)(REP) (by sim and name)
# RESOLVED Constraints
# OUT (G) rd_data[7]  (-->KP)(REP)  =   (R) rd_data[7]  (-->KP)(REP) (by sim and name)
# OUT (G) rd_data[6]  (-->KP)(REP)  =   (R) rd_data[6]  (-->KP)(REP) (by sim and name)
# OUT (G) rd_data[5]  (-->KP)(REP)  =   (R) rd_data[5]  (-->KP)(REP) (by sim and name)
# OUT (G) rd_data[4]  (-->KP)(REP)  =   (R) rd_data[4]  (-->KP)(REP) (by sim and name)
# OUT (G) rd_data[3]  (-->KP)(REP)  =   (R) rd_data[3]  (-->KP)(REP) (by sim and name)
# OUT (G) rd_data[2]  (-->KP)(REP)  =   (R) rd_data[2]  (-->KP)(REP) (by sim and name)
# OUT (G) rd_data[1]  (-->KP)(REP)  =   (R) rd_data[1]  (-->KP)(REP) (by sim and name)
# OUT (G) rd_data[0]  (-->KP)(REP)  =   (R) rd_data[0]  (-->KP)(REP) (by sim and name)
set_root_module fifo_memory -Golden
set_root_module fifo_memory -Revised
set_module_property -instance /m -Golden
set_module_property -instance /m -Revised
report_black_box -NOHidden
set_system_mode lec
report_design_data; report_unmapped_points -summary; report_unmapped_points -notmapped; analyze_datapath -module -verbose; eval analyze_datapath -flowgraph -verbose
add_compared_points -all
compare
save_hier_compare_result
set_system_mode setup
add_black_box fifo_memory -module -hier -Golden
add_black_box fifo_memory -module -hier -Revised
usage
# Root Modules
# Comparing
#-------------------------------------------------------------------------------
# MODULE fifo_top (G) INSTANCE / (G)
# MODULE fifo_top (R) INSTANCE / (R)
# Wrapper size: (G) = 0  (R) = 0
# Periphery size: (G) = 0  (R) = 0
#-------------------------------------------------------------------------------
# RESOLVED Constraints
# IN (G) wr_clk_pad (REP)  =   (R) wr_clk_pad (REP) (by name)
# IN (G) rd_clk_pad (REP)  =   (R) rd_clk_pad (REP) (by name)
# IN (G) wr_en_pad (REP)  =   (R) wr_en_pad (REP) (by name)
# IN (G) rd_en_pad (REP)  =   (R) rd_en_pad (REP) (by name)
# IN (G) wr_rst_pad (REP)  =   (R) wr_rst_pad (REP) (by name)
# IN (G) rd_rst_pad (REP)  =   (R) rd_rst_pad (REP) (by name)
# IN (G) wr_data_pad[7] (REP)  =   (R) wr_data_pad[7] (REP) (by name)
# IN (G) wr_data_pad[6] (REP)  =   (R) wr_data_pad[6] (REP) (by name)
# IN (G) wr_data_pad[5] (REP)  =   (R) wr_data_pad[5] (REP) (by name)
# IN (G) wr_data_pad[4] (REP)  =   (R) wr_data_pad[4] (REP) (by name)
# IN (G) wr_data_pad[3] (REP)  =   (R) wr_data_pad[3] (REP) (by name)
# IN (G) wr_data_pad[2] (REP)  =   (R) wr_data_pad[2] (REP) (by name)
# IN (G) wr_data_pad[1] (REP)  =   (R) wr_data_pad[1] (REP) (by name)
# IN (G) wr_data_pad[0] (REP)  =   (R) wr_data_pad[0] (REP) (by name)
# RESOLVED Constraints
# OUT (G) rd_data_pad[7] (REP)  =   (R) rd_data_pad[7] (REP) (by name)
# OUT (G) rd_data_pad[6] (REP)  =   (R) rd_data_pad[6] (REP) (by name)
# OUT (G) rd_data_pad[5] (REP)  =   (R) rd_data_pad[5] (REP) (by name)
# OUT (G) rd_data_pad[4] (REP)  =   (R) rd_data_pad[4] (REP) (by name)
# OUT (G) rd_data_pad[3] (REP)  =   (R) rd_data_pad[3] (REP) (by name)
# OUT (G) rd_data_pad[2] (REP)  =   (R) rd_data_pad[2] (REP) (by name)
# OUT (G) rd_data_pad[1] (REP)  =   (R) rd_data_pad[1] (REP) (by name)
# OUT (G) rd_data_pad[0] (REP)  =   (R) rd_data_pad[0] (REP) (by name)
# OUT (G) empty_pad (REP)  =   (R) empty_pad (REP) (by name)
# OUT (G) full_pad (REP)  =   (R) full_pad (REP) (by name)
set_root_module fifo_top -Golden
set_root_module fifo_top -Revised
set_module_property -instance / -Golden
set_module_property -instance / -Revised
report_black_box -NOHidden
set_system_mode lec
report_design_data; report_unmapped_points -summary; report_unmapped_points -notmapped; analyze_datapath -module -verbose; eval analyze_datapath -flowgraph -verbose
add_compared_points -all
compare
save_hier_compare_result
set_system_mode setup
usage
report_hier_compare_result
report_hier_compare_result -Nonequivalent
report_hier_compare_result -Abort
report_hier_compare_result -Uncompared
#-------------------------------------------------------------------------------
# VERBOSE REPORTING
#-------------------------------------------------------------------------------
# The following module pairs are not written because of number of primitive
# instances less than 50:
# cdc_synchronizer, prim-cnt = 12 (G) and cdc_synchronizer, prim-cnt = 20 (R)
# dff, prim-cnt = 6 (G) and dff, prim-cnt = 10 (R)
# dff_37, prim-cnt = 6 (G) and dff_37, prim-cnt = 10 (R)
# dff_38, prim-cnt = 6 (G) and dff_38, prim-cnt = 10 (R)
# dff_36, prim-cnt = 6 (G) and dff_36, prim-cnt = 10 (R)
# cdc_synchronizer_35, prim-cnt = 12 (G) and cdc_synchronizer_35, prim-cnt = 20 (R)
#-------------------------------------------------------------------------------
# _END_OF_LEC_HIERARCHICAL_DOFILE_
